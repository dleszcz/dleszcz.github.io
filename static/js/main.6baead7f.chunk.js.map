{"version":3,"sources":["Item.js","Grid.js","MenuItem.js","Menu.js","Focusable.js","Button.js","Home.js","About.js","App.js","serviceWorker.js","index.js"],"names":["withFocusable","id","focused","setFocus","itemRef","useRef","useEffect","el","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","isElementInViewport","current","scrollIntoView","behavior","block","inline","console","log","className","style","border","onClick","ref","items","map","item","key","props","MENU_ITEMS","Menu","FocusableComponent","Component","FocusableWrapper","handleClick","handleArrowPress","handleBecameFocused","handleBecameBlurred","handleWillUnmount","onEnterPress","onArrowPress","onBecameFocused","onBecameBlurred","onWillUnmount","trackChildren","Button","text","ButtonClassName","useMemo","classNames","height","width","memo","history","useHistory","focusKey","GRIDS_1","grid","forgetLastFocusedChild","push","disabled","GRIDS_2","GRIDS_3","PAGES","INITIAL_FOCUS_MAP","handleFocus","initNavigation","initialFocus","location","pathname","path","exact","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6baead7f.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\n\nconst isElementInViewport = (el) => {\n  const rect = el.getBoundingClientRect();\n  return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /* or $(window).height() */\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth) /* or $(window).width() */\n  );\n}\n\nfunction Item({id, focused, setFocus}) {\n  const itemRef = useRef();\n  \n  useEffect(() => {\n    if (focused) {\n      const isVisible = isElementInViewport(itemRef.current);\n      // const el = itemRef.current.getBoundingClientRect();\n      // const direction =  el.top > 0 ? 'start' : 'end';\n\n      if (!isVisible) {\n        itemRef.current.scrollIntoView({behavior: \"smooth\", block: 'center', inline: \"nearest\"});\n      }\n    }\n  }, [focused]);\n\n  console.log('xxx render Item', id);\n\n  return (\n    <div \n      className=\"Item\"\n      style={{\n        border: `1px solid ${focused ? 'blue' : '#eee'}`\n      }}\n      onClick={() => {\n        setFocus();\n      }}\n      ref={itemRef}\n    >\n        {id}\n    </div>\n  );\n}\n\nexport default withFocusable()(Item);\n","import React, { useEffect } from 'react';\nimport {withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\nimport Item from './Item';\n\nfunction Grid({items}) {\n  return (\n    <div className=\"Grid\">\n      { items.map(item => (\n        <Item {...item} key={item.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default withFocusable()(Grid);\n","import React, { useEffect } from 'react';\nimport {withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\n\nfunction MenuItem(props) {\n  const {id, focused, setFocus} = props;\n\n  return (\n    <div \n      className=\"MenuItem\" \n      style={{\n        border: `1px solid ${focused ? 'blue' : '#eee'}`\n      }}\n      onClick={() => {\n        setFocus();\n      }}\n    >\n        {id}\n    </div>\n  );\n}\n\nexport default withFocusable()(MenuItem);\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport MenuItem from './MenuItem';\n\nconst MENU_ITEMS = [\n  {\n    id: 'menu-item-1'\n  },  \n  {\n    id: 'menu-item-2'\n  },\n  {\n    id: 'menu-item-3'\n  },  \n  {\n    id: 'menu-item-4'\n  },\n  {\n    id: 'menu-item-5'\n  },  \n  {\n    id: 'menu-item-6'\n  },\n]\n\nfunction Menu() {\n  return (\n    <div className=\"Menu\">\n      { MENU_ITEMS.map(item => (\n        <MenuItem \n          {...item}\n          key={item.id}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFocusable } from '@noriginmedia/react-spatial-navigation';\n\nconst Focusable = ({ Component, ...props }) => {\n  return <Component {...props} />;\n};\n\nFocusable.propTypes = {\n  Component: PropTypes.func\n};\n\nconst FocusableComponent = withFocusable()(Focusable);\n\nconst FocusableWrapper = props => {\n  const { handleClick, handleArrowPress, handleBecameFocused, handleBecameBlurred, handleWillUnmount } = props;\n  return (\n    <FocusableComponent\n      {...props}\n      onClick={handleClick}\n      onEnterPress={handleClick}\n      onArrowPress={handleArrowPress}\n      onBecameFocused={handleBecameFocused}\n      onBecameBlurred={handleBecameBlurred}\n      onWillUnmount={handleWillUnmount}\n      trackChildren\n    />\n  );\n};\n\nFocusableWrapper.propTypes = {\n  disabled: PropTypes.bool,\n  setFocus: PropTypes.func,\n  handleClick: PropTypes.func,\n  handleArrowPress: PropTypes.func,\n  handleBecameFocused: PropTypes.func,\n  handleBecameBlurred: PropTypes.func,\n  handleWillUnmount: PropTypes.func\n};\n\nexport default FocusableWrapper;\n","import React, { useMemo, memo } from 'react';\nimport classNames from 'classnames';\nimport FocusableComponent from './Focusable';\n\nconst Button = props => {\n  const { current, focused, text = '' } = props;\n  const ButtonClassName = useMemo(() => {\n    return classNames({\n      'button': true,\n      'is-current': current,\n      'is-focused': focused\n    });\n  }, [current, focused]);\n\n  return (\n    <div className={ButtonClassName} style={{\n      height: '40px',\n      width: '100px',\n      border: `1px solid ${focused ? 'blue' : '#eee'}`\n    }}>\n      <span className=\"button__text\">{text}</span>\n    </div>\n  );\n};\n\nexport default memo(props => <FocusableComponent Component={Button} {...props} />);\n","import React, { useEffect } from 'react';\nimport {withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\nimport { useHistory } from \"react-router-dom\";\nimport Button from './Button';\nimport { GRIDS_1, GRIDS_2, GRIDS_3 } from './App';\nimport Grid from './Grid';\n\nfunction Home(props) {\n  const history = useHistory();\n  console.log('xxx home');\n  useEffect(() => {\n    props.setFocus('button-1');\n  }, [props]);\n\n  return (\n    <>\n      <div className=\"Home App-content-container\">\n        <Button focusKey=\"button-1\" />\n        { GRIDS_1.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n        <Button \n          focusKey=\"button-2\" \n          text={'Go to About'} \n          handleClick={() => {\n            console.log('xxx handle click');\n            history.push(\"/about\");\n          }}\n        />\n        <Button focusKey=\"button-3\" disabled text={'Home disabled btn'} />\n        { GRIDS_2.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n        <Button focusKey=\"button-4\" text={'About button'} />\n        { GRIDS_3.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default withFocusable()(Home);\n","import React, { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport {withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\nimport Button from './Button';\nimport { GRIDS_1, GRIDS_2, GRIDS_3 } from './App';\nimport Grid from './Grid';\n\nfunction About(props) {\n  const history = useHistory();\n\n  useEffect(() => {\n    props.setFocus('button-about-back');\n  }, []);\n\n  return (\n    <>\n      <div className=\"About App-content-container\">\n        <Button \n          focusKey=\"button-about-back\" \n          text={'Back'} \n          handleClick={() => {\n            history.push(\"/\");\n          }}\n        />\n        <Button focusKey=\"button-about-1\" text={'Home button 1'} />\n        { GRIDS_3.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n        <Button \n          focusKey=\"button-about-2\" \n          text={'Go to Home'} \n          handleClick={() => {\n            console.log('xxx handle click');\n            history.push(\"/\");\n          }}\n        />\n        <Button focusKey=\"button-about-3\" disabled text={'Home disabled btn'} />\n        { GRIDS_2.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n        <Button focusKey=\"button-about-4\" text={'Home button'} />\n        { GRIDS_1.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default withFocusable()(About);\n","import React, { useEffect } from 'react';\nimport {initNavigation, withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\nimport Grid from './Grid';\nimport Menu from './Menu';\nimport Button from './Button';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation\n} from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\n\nexport const ITEMS_1 = [\n  {\n    id: 'item-1-1'\n  },\n  {\n    id: 'item-1-2'\n  },\n  {\n    id: 'item-1-3'\n  },\n  {\n    id: 'item-1-4'\n  },\n  {\n    id: 'item-1-5'\n  }\n]\nexport const ITEMS_2 = [\n  {\n    id: 'item-2-1'\n  },\n  {\n    id: 'item-2-2'\n  },\n  {\n    id: 'item-2-3'\n  },\n  {\n    id: 'item-2-4'\n  },\n  {\n    id: 'item-2-5'\n  }\n]\nexport const ITEMS_3 = [\n  {\n    id: 'item-3-1'\n  }\n]\nexport const ITEMS_4 = [\n  {\n    id: 'item-4-1'\n  },\n  {\n    id: 'item-4-2'\n  },\n  {\n    id: 'item-4-3'\n  },\n  {\n    id: 'item-4-4'\n  },\n  {\n    id: 'item-4-5'\n  }\n]\nexport const ITEMS_5 = [\n  {\n    id: 'item-5-1'\n  },\n  {\n    id: 'item-5-2'\n  },\n  {\n    id: 'item-5-3'\n  },\n  {\n    id: 'item-5-4'\n  },\n  {\n    id: 'item-5-5'\n  },\n  {\n    id: 'item-5-6'\n  },\n  {\n    id: 'item-5-7'\n  },\n  {\n    id: 'item-5-8'\n  },\n  {\n    id: 'item-5-9'\n  }\n]\nexport const ITEMS_6 = [\n  {\n    id: 'item-6-1'\n  },\n  {\n    id: 'item-6-2'\n  },\n  {\n    id: 'item-6-3'\n  },\n  {\n    id: 'item-6-4'\n  },\n  {\n    id: 'item-6-5'\n  }\n]\n\nexport const ITEMS_7 = [\n  {\n    id: 'item-7-1'\n  },\n  {\n    id: 'item-7-2'\n  },\n  {\n    id: 'item-7-3'\n  },\n  {\n    id: 'item-7-4'\n  },\n  {\n    id: 'item-7-5'\n  }\n]\n\nexport const ITEMS_8 = [\n  {\n    id: 'item-8-1'\n  },\n  {\n    id: 'item-8-2'\n  },\n  {\n    id: 'item-8-3'\n  },\n  {\n    id: 'item-8-4'\n  },\n  {\n    id: 'item-8-5'\n  }\n]\n\nexport const GRIDS_1 = [\n  {\n    id: 'grid-1',\n    items: ITEMS_1\n  },\n  {\n    id: 'grid-2',\n    items: ITEMS_2\n  },\n  {\n    id: 'grid-3',\n    items: ITEMS_3\n  }\n]\n\nexport const GRIDS_2 = [\n  {\n    id: 'grid-4',\n    items: ITEMS_4\n  },\n  {\n    id: 'grid-5',\n    items: ITEMS_5\n  },\n  {\n    id: 'grid-6',\n    items: ITEMS_6\n  }\n]\n\nexport const GRIDS_3 = [\n  {\n    id: 'grid-7',\n    items: ITEMS_7\n  },\n  {\n    id: 'grid-8',\n    items: ITEMS_8\n  }\n]\n\nconst PAGES = {\n  HOME: '/',\n  ABOUT: '/about'\n}\n\nconst INITIAL_FOCUS_MAP = {\n  [PAGES.HOME]: 'button-2',\n  [PAGES.ABOUT]: 'button-about-back'\n}\n\nfunction App(props) {\n  const { setFocus: handleFocus } = props;\n\n  useEffect(() => {\n    initNavigation({});\n    const initialFocus = INITIAL_FOCUS_MAP[window.location.pathname];\n    handleFocus(initialFocus);\n  }, [handleFocus]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"App-menu-container\">\n          <Menu />\n        </div>\n        <Switch>\n          <Route path={PAGES.HOME} exact>\n            <Home />\n          </Route>\n          <Route path={PAGES.ABOUT} exact>\n            <About />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default withFocusable()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}