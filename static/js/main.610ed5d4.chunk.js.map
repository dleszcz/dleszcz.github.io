{"version":3,"sources":["Item.js","Grid.js","MenuItem.js","Menu.js","Focusable.js","Button.style.js","Button.js","Home.js","About.js","App.js","serviceWorker.js","index.js"],"names":["withFocusable","id","focused","setFocus","itemRef","useRef","useEffect","el","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","isElementInViewport","current","scrollIntoView","behavior","block","inline","className","style","border","onClick","ref","items","map","item","key","props","MENU_ITEMS","Menu","FocusableComponent","children","disabled","Component","console","log","FocusableWrapper","focusable","handleClick","StyledButton","styled","button","Button","text","focusKey","history","useHistory","GRIDS_1","grid","forgetLastFocusedChild","push","GRIDS_2","GRIDS_3","onEnterPress","PAGES","INITIAL_FOCUS_MAP","handleFocus","initNavigation","initialFocus","location","pathname","path","exact","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.610ed5d4.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\n\nconst isElementInViewport = (el) => {\n  const rect = el.getBoundingClientRect();\n  return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /* or $(window).height() */\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth) /* or $(window).width() */\n  );\n}\n\nfunction Item({id, focused, setFocus}) {\n  const itemRef = useRef();\n  \n  useEffect(() => {\n    if (focused) {\n      const isVisible = isElementInViewport(itemRef.current);\n      // const el = itemRef.current.getBoundingClientRect();\n      // const direction =  el.top > 0 ? 'start' : 'end';\n\n      if (!isVisible) {\n        itemRef.current.scrollIntoView({behavior: \"smooth\", block: 'center', inline: \"nearest\"});\n      }\n    }\n  }, [focused]);\n\n  return (\n    <div \n      className=\"Item\"\n      style={{\n        border: `1px solid ${focused ? 'blue' : '#eee'}`\n      }}\n      onClick={() => {\n        setFocus();\n      }}\n      ref={itemRef}\n    >\n        {id}\n    </div>\n  );\n}\n\nexport default withFocusable()(Item);\n","import React, { useEffect } from 'react';\nimport {withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\nimport Item from './Item';\n\nfunction Grid({items}) {\n  return (\n    <div className=\"Grid\">\n      { items.map(item => (\n        <Item {...item} key={item.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default withFocusable()(Grid);\n","import React, { useEffect } from 'react';\nimport {withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\n\nfunction MenuItem(props) {\n  const {id, focused, setFocus} = props;\n\n  return (\n    <div \n      className=\"MenuItem\" \n      style={{\n        border: `1px solid ${focused ? 'blue' : '#eee'}`\n      }}\n      onClick={() => {\n        setFocus();\n      }}\n    >\n        {id}\n    </div>\n  );\n}\n\nexport default withFocusable()(MenuItem);\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport MenuItem from './MenuItem';\n\nconst MENU_ITEMS = [\n  {\n    id: 'menu-item-1'\n  },  \n  {\n    id: 'menu-item-2'\n  },\n  {\n    id: 'menu-item-3'\n  },  \n  {\n    id: 'menu-item-4'\n  },\n  {\n    id: 'menu-item-5'\n  },  \n  {\n    id: 'menu-item-6'\n  },\n]\n\nfunction Menu() {\n  return (\n    <div className=\"Menu\">\n      { MENU_ITEMS.map(item => (\n        <MenuItem \n          {...item}\n          key={item.id}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Menu;\n","import React, { useEffect, useRef } from 'react';\nimport {withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\n\nconst isElementInViewport = (el) => {\n  const rect = el.getBoundingClientRect();\n  return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /* or $(window).height() */\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth) /* or $(window).width() */\n  );\n}\n\nconst Focusable = (props) => {\n  const { children, focused, disabled, Component } = props;\n  const itemRef = useRef();\n  console.log('xxx render Focusable')\n\n  useEffect(() => {\n    if (focused) {\n      const isVisible = isElementInViewport(itemRef.current);\n      // const el = itemRef.current.getBoundingClientRect();\n      // const direction =  el.top > 0 ? 'start' : 'end';\n      if (!isVisible) {\n        itemRef.current.scrollIntoView({block: 'center', inline: \"nearest\"});\n      }\n    }\n  }, [focused]);\n\n  return (\n    <Component\n      ref={itemRef}\n      focused={focused}\n      disabled={disabled}\n    >\n      {children}\n    </Component>\n  )\n}\n\nconst FocusableComponent = withFocusable()(Focusable);\n\nconst FocusableWrapper = (props) => {\n  return (\n    <FocusableComponent\n      {...props}\n      focusable={!props.disabled}\n      onClick={props.handleClick}\n      // onEnterPress={props.handleClick}\n      // onArrowPress={props.onArrowPress}\n      // onBecameFocused={props.onItemFocused}\n      // onBecameBlurred={props.onItemBlurred}\n      // autoRestoreFocus={false}\n      // trackChildren\n      // forgetLastFocusedChild\n    >\n      {props.children}\n    </FocusableComponent>\n  );\n}\n\nexport default FocusableWrapper;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  border: ${props => props.focused ? '2px solid blue' : '2px solid #ccc'};  \n  width: 200px;\n  margin-bottom: 25px;\n  border-radius: 5px;\n  padding: 4px;\n\n  &:hover {\n    border: 2px solid blue;\n    color: blue;\n    cursor: pointer;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &[disabled]:hover {\n    color: #aaa;\n    cursor: not-allowed;\n    border: 2px solid #ccc;\n  }\n`;\n\n","import React from 'react';\nimport './App.css';\nimport Focusable from './Focusable';\nimport { StyledButton } from './Button.style';\n\nconst Button = (props) => {\n  const {disabled, text, handleClick, focusKey} = props;\n\n  console.log('xxx render Button')\n  \n  return (\n    <Focusable\n      Component={StyledButton}\n      handleClick={handleClick}\n      disabled={disabled}\n      focusKey={focusKey}\n    >\n      {text || 'Button'}\n    </Focusable>\n  );\n}\n\nexport default Button;\n","import React, { useEffect } from 'react';\nimport {withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\nimport { useHistory } from \"react-router-dom\";\nimport Button from './Button';\nimport { GRIDS_1, GRIDS_2, GRIDS_3 } from './App';\nimport Grid from './Grid';\n\nfunction Home(props) {\n  const history = useHistory();\n\n  useEffect(() => {\n    props.setFocus('button-1');\n  }, []);\n\n  return (\n    <>\n      <div className=\"Home App-content-container\">\n        <Button focusKey=\"button-1\" />\n        { GRIDS_1.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n        <Button \n          focusKey=\"button-2\" \n          text={'Go to About'} \n          handleClick={() => {\n            history.push(\"/about\");\n          }}\n        />\n        <Button focusKey=\"button-3\" disabled text={'Home disabled btn'} />\n        { GRIDS_2.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n        <Button focusKey=\"button-4\" text={'About button'} />\n        { GRIDS_3.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default withFocusable()(Home);\n","import React, { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport {withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\nimport Button from './Button';\nimport { GRIDS_1, GRIDS_2, GRIDS_3 } from './App';\nimport Grid from './Grid';\n\nfunction About(props) {\n  const history = useHistory();\n\n  useEffect(() => {\n    props.setFocus('button-about-back');\n  }, []);\n\n  return (\n    <>\n      <div className=\"About App-content-container\">\n        <Button \n          focusKey=\"button-about-back\" \n          text={'Back'} \n          handleClick={() => {\n            history.push(\"/\");\n          }} \n          onEnterPress={() => {\n            history.push(\"/\");\n          }} \n        />\n        <Button focusKey=\"button-about-1\" text={'Home button 1'} />\n        { GRIDS_3.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n        <Button \n          focusKey=\"button-about-2\" \n          text={'Go to Home'} \n          handleClick={() => {\n            history.push(\"/\");\n          }} \n          onEnterPress={() => {\n            history.push(\"/\");\n          }} \n        />\n        <Button focusKey=\"button-about-3\" disabled text={'Home disabled btn'} />\n        { GRIDS_2.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n        <Button focusKey=\"button-about-4\" text={'Home button'} />\n        { GRIDS_1.map(grid => (\n          <Grid {...grid} forgetLastFocusedChild key={grid.id} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default withFocusable()(About);\n","import React, { useEffect } from 'react';\nimport {initNavigation, withFocusable} from '@noriginmedia/react-spatial-navigation';\nimport './App.css';\nimport Grid from './Grid';\nimport Menu from './Menu';\nimport Button from './Button';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation\n} from 'react-router-dom';\nimport Home from './Home';\nimport About from './About';\n\nexport const ITEMS_1 = [\n  {\n    id: 'item-1-1'\n  },\n  {\n    id: 'item-1-2'\n  },\n  {\n    id: 'item-1-3'\n  },\n  {\n    id: 'item-1-4'\n  },\n  {\n    id: 'item-1-5'\n  }\n]\nexport const ITEMS_2 = [\n  {\n    id: 'item-2-1'\n  },\n  {\n    id: 'item-2-2'\n  },\n  {\n    id: 'item-2-3'\n  },\n  {\n    id: 'item-2-4'\n  },\n  {\n    id: 'item-2-5'\n  }\n]\nexport const ITEMS_3 = [\n  {\n    id: 'item-3-1'\n  }\n]\nexport const ITEMS_4 = [\n  {\n    id: 'item-4-1'\n  },\n  {\n    id: 'item-4-2'\n  },\n  {\n    id: 'item-4-3'\n  },\n  {\n    id: 'item-4-4'\n  },\n  {\n    id: 'item-4-5'\n  }\n]\nexport const ITEMS_5 = [\n  {\n    id: 'item-5-1'\n  },\n  {\n    id: 'item-5-2'\n  },\n  {\n    id: 'item-5-3'\n  },\n  {\n    id: 'item-5-4'\n  },\n  {\n    id: 'item-5-5'\n  },\n  {\n    id: 'item-5-6'\n  },\n  {\n    id: 'item-5-7'\n  },\n  {\n    id: 'item-5-8'\n  },\n  {\n    id: 'item-5-9'\n  }\n]\nexport const ITEMS_6 = [\n  {\n    id: 'item-6-1'\n  },\n  {\n    id: 'item-6-2'\n  },\n  {\n    id: 'item-6-3'\n  },\n  {\n    id: 'item-6-4'\n  },\n  {\n    id: 'item-6-5'\n  }\n]\n\nexport const ITEMS_7 = [\n  {\n    id: 'item-7-1'\n  },\n  {\n    id: 'item-7-2'\n  },\n  {\n    id: 'item-7-3'\n  },\n  {\n    id: 'item-7-4'\n  },\n  {\n    id: 'item-7-5'\n  }\n]\n\nexport const ITEMS_8 = [\n  {\n    id: 'item-8-1'\n  },\n  {\n    id: 'item-8-2'\n  },\n  {\n    id: 'item-8-3'\n  },\n  {\n    id: 'item-8-4'\n  },\n  {\n    id: 'item-8-5'\n  }\n]\n\nexport const GRIDS_1 = [\n  {\n    id: 'grid-1',\n    items: ITEMS_1\n  },\n  {\n    id: 'grid-2',\n    items: ITEMS_2\n  },\n  {\n    id: 'grid-3',\n    items: ITEMS_3\n  }\n]\n\nexport const GRIDS_2 = [\n  {\n    id: 'grid-4',\n    items: ITEMS_4\n  },\n  {\n    id: 'grid-5',\n    items: ITEMS_5\n  },\n  {\n    id: 'grid-6',\n    items: ITEMS_6\n  }\n]\n\nexport const GRIDS_3 = [\n  {\n    id: 'grid-7',\n    items: ITEMS_7\n  },\n  {\n    id: 'grid-8',\n    items: ITEMS_8\n  }\n]\n\nconst PAGES = {\n  HOME: '/',\n  ABOUT: '/about'\n}\n\nconst INITIAL_FOCUS_MAP = {\n  [PAGES.HOME]: 'button-2',\n  [PAGES.ABOUT]: 'button-about-back'\n}\n\nfunction App(props) {\n  const { setFocus: handleFocus } = props;\n\n  useEffect(() => {\n    initNavigation({});\n    const initialFocus = INITIAL_FOCUS_MAP[window.location.pathname];\n    handleFocus(initialFocus);\n  }, [handleFocus]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"App-menu-container\">\n          <Menu />\n        </div>\n        <Switch>\n          <Route path={PAGES.HOME} exact>\n            <Home />\n          </Route>\n          <Route path={PAGES.ABOUT} exact>\n            <About />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default withFocusable()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}